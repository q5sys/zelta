.\" Automatically generated by Pandoc 3.2
.\"
.TH "zelta\-backup" "8" "" "" "System Manager\[cq]s Manual"
.SH NAME
\f[B]zelta backup\f[R], \f[B]zelta sync\f[R], \f[B]zelta clone\f[R] \-
Perform a recursive replication operation.
.SH SYNOPSIS
\f[B]zelta backup\f[R] [\f[B]\-bcdDeeFhhLMpuVw\f[R]]
[\f[B]\-iIjnpqRtTv\f[R]] [\f[I]initiator\f[R]]
\f[I]source\-endpoint\f[R] \f[I]target\-endpoint\f[R]
.PP
\f[B]zelta sync\f[R] [\f[B]\-bcdDeeFhhLMpuVw\f[R]]
[\f[B]\-iIjnpqRtTv\f[R]] [\f[I]initiator\f[R]]
\f[I]source\-endpoint\f[R] \f[I]target\-endpoint\f[R]
.PP
\f[B]zelta clone\f[R] [\f[B]\-d\f[R] \f[I]depth\f[R]]
\f[I]source\-dataset\f[R] \f[I]target\-dataset\f[R]
.SH DESCRIPTION
\f[B]zelta backup\f[R] and \f[B]zelta sync\f[R] attempt to intelligently
replicate snapshots from a \f[I]source\f[R] ZFS dataset endpoint to a
\f[I]target\f[R].
\f[B]zelta backup\f[R] optimizes for complete backups of all snapshots
by default using a careful LBYL strategy, appropriate for typical backup
jobs.
\f[B]zelta sync\f[R] optimizes for efficiency using an EAFP strategy,
appropriate for time\-sensitive operations or controlled environemnts.
Endpoints may be remotely accessible via SSH.
As with \f[B]zfs receive\f[R], the \f[I]target\f[R] dataset endpoint
must not exist or be an replica of the \f[I]source\f[R].
.PP
Zelta is designed for simplicity and safety and is suitable for a backup
server replicating datasets from many systems.
To ensure safe operation, the following default options are set for new
replication \f[I]targets\f[R]: 1.
The property \f[I]readonly=on\f[R] will be set.
2.
Filesystems will not be mounted.
3.
On filesystems, the property \f[I]canmount=noauto\f[R] will be set.
4.
On filesystems, mountpoints will be inherited (discarded) to prevent
overlapping mounts.
.PP
These defaults, as well as snapshot naming scheme and many other
assumptions, can be modified with arguments or via the environment (see
\f[CR]zelta.env.example\f[R] for more information).
.SH OPTIONS
See the manuals for \f[B]zfs\-send(8)\f[R] and \f[B]zfs\-receive(8)\f[R]
for detail on pass\-through options listed below.
.TP
\f[B][\-bcdDeeFhhLMpuVw] [\f[BI]\[en]zfs\-send\-option\f[B]]\f[R]
Pass any unambiguous dashed or double\-dashed option to all \f[B]zfs
send\f[R] and \f[B]zfs receive\f[R] operations.
Note that some options, such as \f[CR]\-s\f[R], are ambiguous and must
be set using the environment instead.
Some options, such as \f[CR]\-I\f[R], work differently in \f[B]zelta
<backup|sync>\f[R], and are described in detail below.
.PP
\f[B]\-I\f[R] This is the default mode for \f[CR]zelta backup\f[R].
Replicate intermediate incremental streams from the \f[I]source\f[R] and
\f[I]target\[cq]s\f[R] matching dataset to the newest.
If the \f[I]target\f[R] is new, all avaialble \f[I]source\f[R] snapshots
will be replicated.
.PP
\f[B]\-i:\f[R] This is the default mode for \f[CR]zelta sync\f[R].
Only replicate the latest stream from the source to the target.
If the \f[I]target\f[R] is new, only the latest \f[I]source\f[R]
snapshot will be replicated.
.TP
\f[B]\-n, \[en]dryrun\f[R]
Run with dry run mode.
Don\[cq]t replicate, but show
\f[CR]zfs <clone|create|get|receive|send>\f[R] commands that would be
run.
Note that \f[B]zelta match\f[R], \f[B]zfs list\f[R], and \f[B]zfs send
\-n\f[R] which are used to determine the anticipated replication
operation will not be displayed.
.TP
\f[B]\-j,\[en]json\f[R]
Produce JSON output for the replication job, suppressing all other
output.
Stream names and error messages will be included in lists inside the
JSON block.
Incremental streams will be listed in the format:
\f[I]\[at]earliest\-snapshot::dataset\[at]latest\-snapshot\f[R]
.TP
\f[B]\-p, \[en]progress\f[R]
Attempt to use a progress viewer.
\f[CR]pv\f[R] will be used by default, otherwise
\f[CR]dd status=progress\f[R] will be used.
.PP
\f[B]\-q\f[R] Reduce verbosity.
.PP
\f[B]\-V\f[R] Increase verbosity.
.PP
\f[B]\-R\f[R] Not recommended.
Sets \f[CR]\-\-depth=1\f[R] and passes \f[CR]\-R\f[R] to the
\f[CR]zfs send\f[R].
See \f[CR]zfs\-send(8)\f[R] for details.
.TP
\f[B]\-d \f[BI]depth\f[B], \[en]depth \f[BI]depth\f[B]\f[R]
Limits the depth of all Zelta operations.
.SH EXAMPLES
Note that the same command can be used for new and existing
\f[I]target\f[R] datasets.
.PP
\f[B]Local synchronization:\f[R] Synchronize a dataset and all of its
snapshots from a local source dataset to a local target dataset,
creating a snapshot only if necessary to get the latest data.
.IP
.EX
zelta backup tank/source/dataset tank/target/dataset
.EE
.PP
\f[B]Migrate remote data to localhost:\f[R] Create a snapshot and
replicate it from a remote source to a local target, only if the source
has new written data.
.IP
.EX
zelta sync \-ss remote_host:tank/source/dataset tank/target/dataset
.EE
.PP
\f[B]Dry Run:\f[R] Display the \f[CR]zfs send\f[R] and
\f[CR]zfs receive\f[R] commands without executing them.
.IP
.EX
zelta backup \-n tank/source/dataset tank/target/dataset
.EE
.SH SEE ALSO
ssh(1), zelta(8), zelta\-match(8), zelta\-policy(8), zfs(8)
.SH AUTHORS
Daniel J. Bell \f[I]\c
.MT bellta@belltower.it
.ME \c
\f[R]
.SH WWW
https://zelta.space
