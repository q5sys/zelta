.\" Automatically generated by Pandoc 3.2
.\"
.TH "zelta\-clone" "8" "" "" "System Manager\[cq]s Manual"
.SH NAME
\f[B]zelta clone\f[R] \- Perform a recursive clone operation.
.SH SYNOPSIS
\f[B]zelta clone\f[R] [\f[B]\-d\f[R] \f[I]depth\f[R]]
[\f[I]initiator\f[R]] \f[I]source/dataset\f[R] \f[I]target/dataset\f[R]
.SH DESCRIPTION
\f[B]zelta clone\f[R] performs a recursive \f[B]zfs clone\f[R] operation
on a local or indicated host.
By default, it wil clone the most recent dataset and all of its
descendents.
The \f[I]target\f[R] dataset must not exist.
By default, the topmost dataset property \f[CR]readonly=off\f[R] will be
set.
Note that ZFS cloning will reset (inherit) mountpoints.
Clones must be created on the same pool as the source dataset.
.PP
When cloning, the \f[I]source\f[R] can be \f[B]readonly\f[R] and not
mounted, making cloning excellent for backup inspection as well as
recovery of a dataset from a specific snapshot.
If using \f[B]zelta clone\f[R] for recovery, consider using \f[B]zelta
backup \[en]rotate\f[R] to replicate the cloned dataset state to its
backup replicas.
.SH OPTIONS
A \f[I]source\f[R] and \f[I]target\f[R] dataset parameter are required.
.TP
\f[B]\f[BI]source/dataset\f[B]\f[R]
A dataset, in the form \f[B]pool[/component][\[at]snapshot]\f[R], which
will be cloned along with all of its descendents.
If a snapshot is not given, the most recent snapshot will be used as the
clone origin.
.TP
\f[B]\f[BI]target/dataset\f[B]\f[R]
A dataset, which must be on the same pool as the
\f[B]source/dataset\f[R], where the clones will be created.
This dataset must not exist.
.TP
\f[B]initiator\f[R]
A remote host, accessible via SSH, where the clone commands will be
executed.
.PP
\f[B]\[en]snapshot\f[R] Snapshot before cloning.
See \f[CR]zelta.env.example\f[R] to adjust the naming scheme.
.TP
\f[B]\-n, \[en]dryrun\f[R]
Don\[cq]t clone, but show the \f[CR]zfs clone\f[R] commands that would
be executed.
.PP
\f[B]\-q\f[R] Reduce verbosity.
.PP
\f[B]\-v\f[R] Increase verbosity.
.TP
\f[B]\-d \f[BI]depth\f[B], \[en]depth \f[BI]depth\f[B]\f[R]
Limits the depth of all Zelta operations.
.SH EXAMPLES
The \f[I]target\f[R] clones can be destroyed without affecting their
source.
After cloning a dataset with a remote replica, \f[B]zelta backup
\[en]rotate\f[R]
.PP
\f[B]Clone a dataset tree for inspection:\f[R]
.IP
.EX
zelta clone tank/vm/myos tank/temp/myos\-202404 
.EE
.PP
\f[B]Recover a dataset tree, in place, to a previous snapshot\[cq]s
state:\f[R]
.IP
.EX
zfs rename tank/vm/myos tank/Archives/myos\-202404
zelta clone tank/Archives/myos\-202404\[at]goodsnapshot tank/vm/myos
.EE
.PP
\f[B]Dry Run:\f[R] Display the \f[CR]zfs clone\f[R] commands without
executing them.
.IP
.EX
zelta clone \-n tank/source/dataset tank/target/dataset
.EE
.SH SEE ALSO
ssh(1), zelta(8), zelta\-backup(8), zelta\-match(8), zelta\-policy(8),
zfs(8), zfs\-clone(8), zfs\-promote(8)
.SH AUTHORS
Daniel J. Bell \f[I]\c
.MT bellta@belltower.it
.ME \c
\f[R]
.SH WWW
https://zelta.space
